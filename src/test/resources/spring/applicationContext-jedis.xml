<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/jdbc-druid-config.properties"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--最大空闲数-->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--最大连接数-->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!--最大等待时间-->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <!--链接超时时是否阻塞，false报错，true阻塞到超时默认true-->
        <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}"/>
        <!--返回链接时，检测链接是否从成功-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>
    <!--
    <bean id="jedisPool" class="redisutils.clients.jedis.JedisPoolUtil">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redisutils.host}"/>
        <constructor-arg index="2" value="${redisutils.port}" type="int"/>
        <constructor-arg index="3" value="${redisutils.timeout}" type="int"/>
        <constructor-arg index="4" value="${redisutils.auth}"/>
    </bean>
    -->

    <!--spring 分布式jedis的连接池工厂-->
    <bean id="jedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1">
            <list>
                <!--集群就是多个bean -->
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}"/>
                    <constructor-arg name="port" value="${redis.port}"/>
                    <property name="soTimeout" value="${redis.timeout}"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
</beans>